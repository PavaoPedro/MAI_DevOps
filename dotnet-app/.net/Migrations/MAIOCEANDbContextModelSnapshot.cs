// <auto-generated />
using System;
using MAIOCEAN.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MAIOCEAN.Migrations
{
    [DbContext(typeof(MAIOCEANDbContext))]
    partial class MAIOCEANDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EspecieRegiao", b =>
                {
                    b.Property<int>("EspecieIdEspecie")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RegiaoIdRegiao")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("EspecieIdEspecie", "RegiaoIdRegiao");

                    b.HasIndex("RegiaoIdRegiao");

                    b.ToTable("EspecieRegiao");
                });

            modelBuilder.Entity("MAIOCEAN.Models.Especie", b =>
                {
                    b.Property<int>("IdEspecie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspecie"));

                    b.Property<string>("DescricaoEspecie")
                        .IsRequired()
                        .HasColumnType("varchar(155)")
                        .HasColumnName("Ds_Especie");

                    b.Property<string>("NomeEspecie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("StatusEspecie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdEspecie");

                    b.ToTable("TB_MAIOCEAN_ESPECIES");
                });

            modelBuilder.Entity("MAIOCEAN.Models.Imagem", b =>
                {
                    b.Property<int>("IdImagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagem"));

                    b.Property<string>("CaminhoImagem")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("DS_CAMINHO");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IdRegiao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("IdRobo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Profundidade")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("RegiaoIdRegiao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("RoboIdRobo")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdImagem");

                    b.HasIndex("RegiaoIdRegiao");

                    b.HasIndex("RoboIdRobo");

                    b.ToTable("TB_MAIOCEAN_IMAGEM");
                });

            modelBuilder.Entity("MAIOCEAN.Models.Regiao", b =>
                {
                    b.Property<int>("IdRegiao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegiao"));

                    b.Property<int>("IdRobo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NomeRegiao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("RoboIdRobo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("StatusRegiao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("TempMedia")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("IdRegiao");

                    b.HasIndex("RoboIdRobo");

                    b.ToTable("TB_MAIOCEAN_REGIAO");
                });

            modelBuilder.Entity("MAIOCEAN.Models.Robo", b =>
                {
                    b.Property<int>("IdRobo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRobo"));

                    b.Property<string>("NmrSerie")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("NVARCHAR2(9)");

                    b.Property<string>("StatusRobo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdRobo");

                    b.ToTable("TB_MAIOCEAN_ROBO");
                });

            modelBuilder.Entity("MAIOCEAN.Models.Temperatura", b =>
                {
                    b.Property<int>("IdTemperatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTemperatura"));

                    b.Property<DateTime>("DataColeta")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IdRegiao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("LatitudeTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("LongitudeTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("ProfundTemperatura")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("RegiaoIdRegiao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("ValorTemperatura")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("IdTemperatura");

                    b.HasIndex("RegiaoIdRegiao");

                    b.ToTable("TB_MAIOCEAN_TEMPERATURA");
                });

            modelBuilder.Entity("RoboTemperatura", b =>
                {
                    b.Property<int>("RoboIdRobo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TemperaturaIdTemperatura")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("RoboIdRobo", "TemperaturaIdTemperatura");

                    b.HasIndex("TemperaturaIdTemperatura");

                    b.ToTable("RoboTemperatura");
                });

            modelBuilder.Entity("EspecieRegiao", b =>
                {
                    b.HasOne("MAIOCEAN.Models.Especie", null)
                        .WithMany()
                        .HasForeignKey("EspecieIdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAIOCEAN.Models.Regiao", null)
                        .WithMany()
                        .HasForeignKey("RegiaoIdRegiao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAIOCEAN.Models.Imagem", b =>
                {
                    b.HasOne("MAIOCEAN.Models.Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("RegiaoIdRegiao");

                    b.HasOne("MAIOCEAN.Models.Robo", "Robo")
                        .WithMany()
                        .HasForeignKey("RoboIdRobo");

                    b.Navigation("Regiao");

                    b.Navigation("Robo");
                });

            modelBuilder.Entity("MAIOCEAN.Models.Regiao", b =>
                {
                    b.HasOne("MAIOCEAN.Models.Robo", "Robo")
                        .WithMany()
                        .HasForeignKey("RoboIdRobo");

                    b.Navigation("Robo");
                });

            modelBuilder.Entity("MAIOCEAN.Models.Temperatura", b =>
                {
                    b.HasOne("MAIOCEAN.Models.Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("RegiaoIdRegiao");

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("RoboTemperatura", b =>
                {
                    b.HasOne("MAIOCEAN.Models.Robo", null)
                        .WithMany()
                        .HasForeignKey("RoboIdRobo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAIOCEAN.Models.Temperatura", null)
                        .WithMany()
                        .HasForeignKey("TemperaturaIdTemperatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
